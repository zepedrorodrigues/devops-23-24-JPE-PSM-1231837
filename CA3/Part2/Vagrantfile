Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2004"

  # BOTH VMs ----------------------------------------------------
  # Update all apps and install JDK 17
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update -y
    sudo apt-get install -y iputils-ping avahi-daemon libnss-mdns unzip openjdk-17-jdk-headless
  SHELL
  #-------------------------------------------------------------

  # DATABASE VM -------------------------------------------------
  config.vm.define "db" do |db|
    db.vm.box = "generic/ubuntu2004"
    db.vm.hostname = "db"
    db.vm.network "private_network", ip: "192.168.56.11"
    db.vm.network "forwarded_port", guest: 8082, host: 8082
    db.vm.network "forwarded_port", guest: 9092, host: 9092

    db.vm.provision "shell", inline: <<-SHELL
      wget https://repo1.maven.org/maven2/com/h2database/h2/1.4.200/h2-1.4.200.jar
    SHELL

    db.vm.provision "shell", run: 'always', inline: <<-SHELL
      java -cp ./h2*.jar org.h2.tools.Server -web -webAllowOthers -tcp -tcpAllowOthers -ifNotExists > ~/out.txt &
    SHELL
  end
  #-------------------------------------------------------------

  # WEB VM ------------------------------------------------------
  config.vm.define "web" do |web|
    web.vm.box = "generic/ubuntu2004"
    web.vm.hostname = "web"
    web.vm.network "private_network", ip: "192.168.56.10"

    web.vm.provider "virtualbox" do |v|
      v.memory = 1024
    end
    web.vm.network "forwarded_port", guest: 8080, host: 8080

    web.vm.provision "shell", inline: <<-SHELL, privileged: true
      # USE SET -E COMMAND TO EXIT AUTOMATICALLY IF ANY SHELL COMMAND FAILS
      set -e

      # Install Node.js and npm
      curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
      sudo apt-get install -y nodejs

      # Install Tomcat
      wget https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.18/bin/apache-tomcat-10.0.18.tar.gz
      tar -xvf apache-tomcat-10.0.18.tar.gz
      sudo mv apache-tomcat-10.0.18 /opt/tomcat10
      sudo ln -s /opt/tomcat10 /usr/local/tomcat10
      sudo chown -R vagrant:vagrant /opt/tomcat10

      # Clone repo, change Gradle wrapper permissions, and execute build
      git clone https://github.com/zepedrorodrigues/devops-23-24-JPE-PSM-1231837.git
      cd devops-23-24-JPE-PSM-1231837/CA2/Part2/demo

      # Remove any existing node_modules to ensure a clean install
      rm -rf node_modules

      # Install npm dependencies
      npm install

      # Make Gradle wrapper and webpack executable
      chmod u+x gradlew
      chmod u+x node_modules/.bin/webpack

      # Build the project using Gradle and log output
      ./gradlew build | tee build.log

      # Copy WAR file generated after Gradle build into Tomcat webapps
      sudo cp ./build/libs/*.war /opt/tomcat10/webapps

      # Startup Tomcat
      /opt/tomcat10/bin/startup.sh
    SHELL
  end
  #-------------------------------------------------------------
end
